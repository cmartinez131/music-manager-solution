@page "/EditSong/{id:guid}"
@using music_manager_starter.Shared

@inject HttpClient Http
@inject NavigationManager Navigation

@code {
    [Parameter] public Guid Id { get; set; }
    private Song song = new Song();
    private string message;

    protected override async Task OnInitializedAsync()
    {
        song = await Http.GetFromJsonAsync<Song>($"api/songs/{Id}");
    }
    private void CancelEdit()
    {
        Navigation.NavigateTo("/");
    }

    private async Task HandleValidSubmit()
    {
        // Make API request to get the song by id.
        var response = await Http.PutAsJsonAsync($"api/songs/{song.Id}", song);
        
        // Check thet the rating is between 1 and 10 or the rating. the Rating attribute is optional
        if (song.Rating != null && (song.Rating < 1 || song.Rating > 10))
        {
            message = "Enter a rating between 1 and 10.";
            return;
        }
        if (song.ReleaseYear != null && (song.ReleaseYear < 1900 || song.ReleaseYear > 2024))
        {
            message = "Enter a valid year between 1900 and 2024, or leave it empty.";
            return;
        }
        
        if (response.IsSuccessStatusCode)
        {
            message = "Song updated successfully!";
        }
        else
        {
            message = "Error updating song. Please try again.";
        }
        Navigation.NavigateTo("/");
    }
}

<div class="p-8 min-h-screen bg-pattern mg-2">
    <div class="bg-gray-800 glass rounded-lg p-8 shadow-lg max-w-lg mx-auto">
        <h2 class="text-2xl font-semibold text-white mb-6 text-center">Edit Song</h2>

        <EditForm Model="song" OnValidSubmit="HandleValidSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="mb-6">
                <label class="block text-gray-200 mb-2">Title</label>
                <InputText @bind-Value="song.Title" class="w-full p-2 border border-gray-600 rounded-lg" />
            </div>

            <div class="mb-6">
                <label class="block text-gray-200 mb-2">Artist</label>
                <InputText @bind-Value="song.Artist" class="w-full p-2 border border-gray-600 rounded-lg" />
            </div>

            <div class="mb-6">
                <label class="block text-gray-200 mb-2">Album</label>
                <InputText @bind-Value="song.Album" class="w-full p-2 border border-gray-600 rounded-lg" />
            </div>

            <div class="mb-6">
                <label class="block text-gray-200 mb-2">Genre</label>
                <InputText @bind-Value="song.Genre" class="w-full p-2 border border-gray-600 rounded-lg" />
            </div>

            <div class="mb-6">
                <label class="block text-gray-200 mb-2">Rating (Optional, 1-10)</label>
                <InputNumber @bind-Value="song.Rating" class="w-full p-2 border border-gray-600 rounded-lg" />
            </div>

            <div class="mb-6">
                <label class="block text-gray-200 mb-2">Release Year</label>
                <InputNumber @bind-Value="song.ReleaseYear" class="w-full p-2 border border-gray-600 rounded-lg" />
            </div>

            <div class="flex space-x-4">
                <button type="submit" class="bg-purple-600 hover:bg-purple-700 text-white px-6 py-3 rounded-lg w-full mt-4">Update Song</button>
                <button @onclick="CancelEdit" type="button" class="bg-gray-600 hover:bg-gray-700 text-white px-6 py-3 rounded-lg w-full mt-4">Cancel</button>
            </div>
        </EditForm>

        @if (message != null)
        {
            <p class="mt-6 text-green-500 text-center">@message</p>
        }
    </div>
</div>

<style>
    .bg-pattern {
        background: linear-gradient( rgba(31, 41, 55, 0.7), rgba(31, 41, 55, 0.7) ), url('dalle.webp');
        background-size: cover;
        background-position: center;
        font-family: 'Rajdhani', sans-serif;
        background-attachment: fixed;
    }

    .glass {
        background: rgba(255, 255, 255, 0.1);
        backdrop-filter: blur(10px); 
        border-radius: 10px; 
        position: relative; 
        overflow: hidden; 
    }
</style>